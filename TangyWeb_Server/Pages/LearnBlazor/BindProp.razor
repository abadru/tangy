@page "/learnBlazor/bindProp"
@using Tangy_Models.LearnBlazorModels

<h2 class="text-success">Individual Product</h2>
<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground </h3>
        
        <div>
            Price: <input type="number" @bind-value="@product.Price" @bind-value:event="oninput"/> <br/>
        </div>
        
        <div>
            Active: <input type="checkbox" @bind-value="@product.IsActive" @bind-value:event="oninput" checked="@(product.IsActive ? "checked" : null)"/> <br/>
        </div>
    
        <div>
            Product Properties:
            <select @bind="selectedProp">
                @foreach (var prop in product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Value</option>
                }
            </select>
        </div>
    
    </div>
    <div class="col-6 border p-2">
        <h3 class="text-primary">Product Summary </h3>
        <hr>
        Name: @product.Name <br />
        Is Active: @product.IsActive <br />
        Price: @product.Price <br />
        This product is: @(product.IsActive ? "Active" : "Inactive") <br />
        Property Selected: @selectedProp <br />
        Property Value:
        @if (!string.IsNullOrEmpty(selectedProp))
        {
            <p>@product.ProductProperties.FirstOrDefault(x => x.Key ==selectedProp)?.Value</p>
        }
    </div>
    
    <br>
    
    <div class="col-12 pt-4">
        <h2 class="text-success">Product Table</h2>
        <table class="table table-striped">
            <tbody>
            @foreach (var product in Products)
            {
                <tr>
                    <td>
                        <input type="text" @bind-value=product.Name @bind-value:event="oninput"/>
                    </td>
                    <td>
                        <input type="text" @bind-value=product.Price @bind-value:event="oninput"/>
                    </td>
                        
                    <td>
                        <input type="checkbox" @bind-value=product.IsActive checked="@(product.IsActive ? "checked" : null)"/>
                    </td>
                        
                        
                </tr>
            }
            </tbody>
        </table>
        <br />
        <br />
        <h2>Product Summary</h2>
             @foreach (var product in Products)
                    {
                        <p>@product.Name [@product.Price] is @(product.IsActive ? "Active" : "InActive") </p>
                    }
    </div>

</div>

@code {
    private string selectedProp;
    Demo_Product product = new Demo_Product()
    {
        Id = 1,
        Name = "Rose Candle",
        Price = 10.99,
        IsActive = true,
        ProductProperties = new List<Demo_ProductProp>
        {
            new Demo_ProductProp { Id = 1, Key = "Color", Value = "Black"},
            new Demo_ProductProp { Id = 2, Key = "Flavor", Value = "Rose Jasmine"},
            new Demo_ProductProp { Id = 3, Key = "Size", Value = "20oz"},
        }
    };

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        // base.OnInitialized();
        Products.Add(new()
        {
            Id = 1,
            Name = "Midnight Blaze",
            IsActive = false,
            Price = 12.3,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
            }
        });

        Products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 18.56,
            ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }

}